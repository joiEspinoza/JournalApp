{"version":3,"sources":["FireBase/fireBaseConfig.js","Helpers/HloadNotes.js","Types/types.js","Helpers/HFileUpload.js","Actions/notesAction.js","Hooks/useForm.js","Components/notes/NotesAppBar.js","Components/notes/CNoteScreen.js","Components/journal/NothingSelected.js","Actions/uiActions.js","Actions/authAction.js","Components/journal/JournalEntry.js","Components/journal/JournalEntries.js","Components/journal/SiderBar.js","Components/journal/CJournalScreen.js","Components/auth/CLoginScreen.js","Components/auth/CRegisterScreen.js","Routers/AuthRouter.js","Routers/PrivateRoute.js","Routers/PublicRoute.js","Routers/AppRouter.js","Reducer/authReducer.js","Reducer/uiReducer.js","Store/store.js","Reducer/noteReducer.js","App/JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","HloadNotes","uid","a","collection","get","noteSnap","notes","forEach","snap","push","id","data","console","log","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","HFileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","saveNote","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","formValues","setFormValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","className","onChange","event","files","text","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploadingPicture","style","display","onClick","document","getElementById","click","CNoteScreen","noteActive","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleteNote","NothingSelected","setErrorAction","error","displayName","starLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","catch","message","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","element","SiderBar","color","signOut","newNote","Date","getTime","add","docRef","CJournalScreen","CLoginScreen","ui","msgError","loading","formValidator","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","CRegisterScreen","password2","isFormValid","trim","createUserWithEmailAndPassword","updateProfile","starRegisterWhitEmailNamePassword","AuthRouter","exact","path","component","PrivateRoute","isLoggedIn","Component","rest","props","protoType","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","authReducer","action","uiReducer","reducers","combineReducers","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","divRoot","ReactDOM","render"],"mappings":"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","file":"static/js/main.616b5bda.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n//////\r\n\r\n//console.log( process.env );\r\n\r\nconst firebaseConfig = \r\n{\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID,\r\n\r\n};\r\n\r\n  firebase.initializeApp( firebaseConfig );\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider;\r\n\r\n  //////\r\n\r\n  export { db, googleAuthProvider, firebase };","import { db } from \"../FireBase/fireBaseConfig\";\r\n\r\n////\r\n\r\nconst HloadNotes = async ( uid ) =>\r\n{\r\n    try \r\n    {\r\n        const noteSnap =  await db.collection( `${ uid }/journal/notes` ).get();\r\n\r\n        const notes = [];\r\n    \r\n        noteSnap.forEach( ( snap ) => \r\n        {  \r\n    \r\n            notes.push(\r\n    \r\n                { id : snap.id, ...snap.data() }\r\n            );\r\n    \r\n        } );\r\n    \r\n        return notes;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n        console.log( error );\r\n    };\r\n   \r\n};\r\n\r\n/////\r\n\r\nexport { HloadNotes };\r\n\r\n//////// Carga todos los datos relacionados con las notas desde firebase","\r\nconst types = \r\n{\r\n    \r\n    login : \"[Auth] Login\",\r\n    logout : \"[Auth] Logout\",\r\n\r\n    //\r\n\r\n    uiSetError : \"[UI] Set Error\",\r\n    uiRemoveError : \"[UI] Remove Error\",\r\n    uiStartLoading: \"[UI] Start loading\",\r\n    uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n    //\r\n\r\n    notesAddNew :  \"[Notes] New notes\",\r\n    notesActive :  \"[Notes] Set active note\",\r\n    notesLoad :    \"[Notes] Load notes\",\r\n    notesUpdated : \"[Notes] Update notes\",\r\n    notesFileUrl : \"[Notes] Update image url\",\r\n    notesDelete : \"[Notes] Delete note\",\r\n    notesLogoutCleaning : \"[Notes] Logout cleaning\"\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default types;","\r\nconst HFileUpload = async ( file ) =>\r\n{\r\n\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/djlmqpd2n/upload\";\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append( \"upload_preset\", \"react-journal\" );\r\n\r\n    formData.append( \"file\", file );\r\n\r\n    //////\r\n\r\n    try \r\n    {\r\n        const resp = await fetch( cloudUrl, { method : \"POST\", body : formData  } );\r\n\r\n        if( resp.ok )\r\n        {\r\n            const cloudResp = await resp.json();\r\n\r\n            return cloudResp.secure_url;\r\n        }\r\n        else\r\n        {\r\n            throw await resp.json();\r\n        };\r\n\r\n    } \r\n    catch( error ) \r\n    {\r\n        return null;\r\n    };\r\n\r\n};\r\n\r\n///////\r\n\r\nexport { HFileUpload };","import { db } from \"../FireBase/fireBaseConfig\";\r\nimport { HloadNotes } from \"../Helpers/HloadNotes\";\r\nimport types from \"../Types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { HFileUpload } from \"../Helpers/HFileUpload\";\r\n\r\n/////\r\n\r\nconst starNewNote = () =>\r\n{\r\n    return async ( dispatch, getState ) => {\r\n\r\n        try \r\n        {\r\n            const { uid } = getState().auth;\r\n\r\n            const newNote = \r\n            {\r\n                title : \"\",\r\n                body : \"\",\r\n                date : new Date().getTime()\r\n            };\r\n    \r\n            const docRef = await db.collection( `${ uid }/journal/notes` ).add( newNote );\r\n    \r\n            dispatch( activeNote( docRef.id, newNote ) );\r\n            \r\n            dispatch( addNewNote( docRef.id, newNote ) );\r\n        } \r\n        catch (error) \r\n        {\r\n            console.log(error);\r\n        }\r\n      \r\n\r\n    };\r\n};\r\n\r\n/////\r\n\r\nconst activeNote = ( id, note ) =>( { type : types.notesActive, payload : { id, ...note } } );\r\n\r\n///////\r\n\r\nconst addNewNote = ( id, note ) => ( { type : types.notesAddNew, payload : { id, ...note } } );\r\n\r\n//////\r\n\r\nconst startLoadingNotes = ( uid ) =>\r\n{\r\n    return async ( dispatch ) => \r\n    {\r\n        try \r\n        {\r\n            const notes = await HloadNotes( uid );\r\n\r\n            dispatch( setNotes( notes ) );\r\n        } \r\n        catch (error) \r\n        {\r\n            console.log( error );\r\n        }\r\n     \r\n    };\r\n};\r\n\r\n///////\r\n\r\nconst setNotes = ( notes ) => ( { type : types.notesLoad, payload : notes } );\r\n\r\n//////\r\n\r\nconst saveNote = ( note ) =>\r\n{\r\n    return async ( dispatch, getState ) =>\r\n    {\r\n        try \r\n        {\r\n            const { uid } = getState().auth;\r\n\r\n            if( !note.url )\r\n            {\r\n                delete note.url;\r\n            };\r\n    \r\n            const noteToFireStore = { ...note };\r\n            delete noteToFireStore.id; // elimina una propiedad del objeto\r\n    \r\n            await db.doc( `${ uid }/journal/notes/${ note.id }` ).update( noteToFireStore );\r\n    \r\n            dispatch( refreshNote( note.id, noteToFireStore ) );\r\n    \r\n            Swal.fire(\"Saved\",note.title,\"success\");\r\n\r\n        } \r\n        catch ( error ) \r\n        {\r\n            Swal.fire(\"Error\",error,\"error\");\r\n        }\r\n      \r\n    };\r\n};\r\n\r\n//////\r\n\r\nconst refreshNote = ( id, note ) => ( { type : types.notesUpdated, payload : { id, note : { id, ...note } } } );\r\n\r\n///////\r\n\r\nconst startUploadingPicture = ( file ) =>\r\n{\r\n    return async ( dispatch, getState ) =>\r\n    {\r\n\r\n        try \r\n        {\r\n            const { active:activeNote } = getState().notes;\r\n\r\n            Swal.fire(\r\n    \r\n                {\r\n                    title: \"Uploading....\",\r\n                    text: \"Please wait...\",\r\n                    showConfirmButton: false,\r\n                    onBeforeOpen: ()=>{\r\n                        \r\n                        Swal.showLoading();\r\n                    }\r\n                }\r\n    \r\n            );\r\n    \r\n            const fileUrl = await HFileUpload( file );\r\n            activeNote.url = fileUrl;\r\n            \r\n            dispatch( saveNote( activeNote ) );\r\n    \r\n            Swal.close();\r\n        } \r\n        catch (error) \r\n        {\r\n            console.log( error );\r\n        }\r\n       \r\n    };\r\n};\r\n\r\n//////\r\n\r\nconst startDeleteNote = ( id ) =>\r\n{\r\n    return async ( dispatch, getState ) =>\r\n    {\r\n        try \r\n        {\r\n            const uid = getState().auth.uid;\r\n\r\n            await db.doc( `${ uid }/journal/notes/${ id }` ).delete();\r\n    \r\n            dispatch( deleteNote( id ) );\r\n        } \r\n        catch (error) \r\n        {\r\n            console.log( error );\r\n        }\r\n       \r\n    };\r\n};\r\n\r\n/////\r\n\r\nconst deleteNote = ( id ) => ( { type : types.notesDelete, payload : id } );\r\n\r\n/////\r\n\r\nconst purgeLogout = () => ( { type : types.notesLogoutCleaning } );\r\n\r\n\r\n/////\r\n\r\nexport \r\n{ \r\n    starNewNote, \r\n    activeNote, \r\n    setNotes, \r\n    startLoadingNotes, \r\n    saveNote, \r\n    refreshNote, \r\n    startUploadingPicture,\r\n    startDeleteNote,\r\n    purgeLogout\r\n};\r\n\r\n","import { useState } from \"react\"\n\n///////\n\nconst useForm = ( initialState = {} ) => \n{\n    const [ formValues, setFormValues ] = useState( initialState );\n\n    //\n\n    const reset = ( newFormState = initialState ) => setFormValues( newFormState );\n\n    //\n\n    const handleInputChange = ( { target } ) =>\n    {\n        setFormValues( { ...formValues, [ target.name ] : target.value } );\n    }\n\n    //\n\n    return [ formValues, handleInputChange, reset ];\n}\n\n/////\n\nexport default useForm;\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveNote, startUploadingPicture } from '../../Actions/notesAction';\r\n\r\n////\r\n\r\nconst NotesAppBar = () => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector( state => state.notes );\r\n\r\n    ///////\r\n\r\n    const handleSaveNote = () =>\r\n    {\r\n        dispatch( saveNote( note ) );\r\n    };\r\n\r\n    ///////\r\n\r\n    const handleSavePicture = () =>\r\n    {\r\n        document.getElementById( \"fileSelector\" ).click();\r\n    };\r\n\r\n    ///////\r\n\r\n    const handleFileChange = ( event ) =>\r\n    {\r\n        const file = event.target.files[0];\r\n\r\n        file && dispatch( startUploadingPicture( file ) );\r\n\r\n    };\r\n\r\n    ///////\r\n\r\n    return (\r\n\r\n        <div className=\"notes__appbar\">\r\n            \r\n            <span>25-11-2020</span>\r\n\r\n            <input  id=\"fileSelector\" name=\"file\" type=\"file\"  onChange={ handleFileChange } style={ { display : \"none\" } } />\r\n\r\n            <div>\r\n\r\n                <button className=\"btn\"  onClick={ handleSavePicture }>picture</button>\r\n\r\n                <button className=\"btn\" onClick={ handleSaveNote } >save</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n////\r\n\r\nexport default NotesAppBar;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleteNote } from '../../Actions/notesAction';\r\nimport useForm from '../../Hooks/useForm';\r\nimport NotesAppBar from './NotesAppBar';\r\n\r\n\r\n////\r\n\r\nconst CNoteScreen = () => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /////\r\n\r\n    const { active:noteActive } = useSelector( state => state.notes );\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( noteActive );\r\n\r\n    const { title, body, id } = formValues;\r\n\r\n    /////\r\n\r\n    const activeId = useRef( noteActive.id );\r\n\r\n    useEffect( () =>  //ayuda a resetear los valores de la nota segun el id | se dispara solo si el ID cambia\r\n    {\r\n        if( noteActive.id !== activeId.current)\r\n        {\r\n            reset( noteActive );\r\n            activeId.current = noteActive.id;\r\n        };\r\n\r\n    }, [ noteActive, reset ] );\r\n\r\n    ///// \r\n\r\n    useEffect( () => \r\n    {\r\n       \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [ formValues, dispatch ] );\r\n\r\n    //////\r\n    \r\n    const handleDelete = () =>\r\n    {\r\n        dispatch( startDeleteNote( id ) );\r\n    };\r\n\r\n    /////\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar/>\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input type=\"text\" placeholder=\"Some awesone title\" autoComplete=\"off\" className=\"notes__title-input\" name=\"title\" value={ title } onChange={ handleInputChange }/>\r\n\r\n                <textarea placeholder=\"What happen today?\" className=\"notes__textarea\" name=\"body\" value={ body } onChange={ handleInputChange } ></textarea>\r\n                \r\n                { (noteActive.url) && \r\n                \r\n                    (<div className=\"notes__image\">\r\n\r\n                            <img \r\n                                src={ noteActive.url }\r\n                                alt=\"img\"\r\n                            />\r\n\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button className=\"btn btn-danger\" onClick={ handleDelete }> Delete </button>\r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CNoteScreen;\r\n","import React from 'react';\r\n\r\n/////\r\n\r\nconst NothingSelected = () => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"nothing__main-content\">\r\n            \r\n            <p> Select somthing <br/> or create somthing </p>\r\n            <i className=\"far fa-star fa-4x mt-5\" ></i>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default NothingSelected;\r\n","import types from \"../Types/types\";\r\n\r\n///////\r\n\r\nconst setErrorAction = ( error ) => ( {  type :  types.uiSetError, payload : error } );\r\n\r\nconst uiRemoveErrorAction = () => ( { type : types.uiRemoveError } );\r\n\r\nconst uiStartLoadingAction = () => ( { type : types.uiStartLoading, payload : true } );\r\n\r\nconst uiFinishLoading = () => ( { type : types.uiFinishLoading, payload : false } );\r\n\r\n\r\n///////\r\n\r\nexport { setErrorAction,uiRemoveErrorAction, uiStartLoadingAction, uiFinishLoading };","import types from \"../Types/types\";\r\nimport { firebase, googleAuthProvider } from \"../FireBase/fireBaseConfig\";\r\nimport { uiStartLoadingAction, uiFinishLoading } from \"./uiActions\";\r\nimport Swal from 'sweetalert2';\r\nimport { purgeLogout } from \"./notesAction\";\r\n\r\n////\r\n\r\nconst login = ( uid, displayName ) => ( { type : types.login, payload : { uid, displayName } } );\r\n\r\n///// LOGIN NORMAL\r\n\r\nconst starLoginEmailPassword = ( email, password ) =>\r\n{\r\n    return ( dispatch ) => \r\n    {\r\n        dispatch( uiStartLoadingAction() );\r\n\r\n        return firebase.auth().signInWithEmailAndPassword( email, password )\r\n        .then( ( { user } ) => \r\n        { \r\n            dispatch( login( user.uid, user.displayName ) );\r\n\r\n            dispatch( uiFinishLoading() );\r\n\r\n        } )\r\n        .catch( ( error ) => \r\n        { \r\n            console.log( error );\r\n            \r\n            dispatch( uiFinishLoading() );\r\n\r\n            Swal.fire( \"error\", error.message, \"error\" );\r\n            \r\n        } );\r\n    };\r\n};\r\n\r\n///// CREAR USUARIO\r\n\r\nconst starRegisterWhitEmailNamePassword = ( email, password, name ) =>\r\n{\r\n    return( ( dispatch ) => \r\n    {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n        .then( async ( { user } ) =>\r\n        {  \r\n            await user.updateProfile( { displayName : name } ); \r\n            dispatch( login( user.uid, user.displayName ) );\r\n\r\n        } )\r\n        .catch( ( error ) => {\r\n            \r\n            console.log( error );\r\n\r\n            Swal.fire( \"error\", error.message, \"error\" );\r\n        \r\n        } );\r\n\r\n    });\r\n};\r\n\r\n///// LOGIN GOOGLE\r\n\r\nconst startGoogleLogin = () =>\r\n{\r\n    return ( dispatch ) => \r\n    {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ( { user } ) => dispatch( login( user.uid, user.displayName ) ) )\r\n        .catch( ( error ) => console.log( error ) );\r\n    };\r\n};\r\n\r\n/////////////////////////////////////////////----LOGOUT----///////////////////////////////////////\r\n\r\nconst startLogout = () =>\r\n{\r\n    return async ( dispatch ) => \r\n    {\r\n        try \r\n        {\r\n            await firebase.auth().signOut();\r\n\r\n            dispatch( purgeLogout() );\r\n            dispatch( logout() );\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error );\r\n        };\r\n       \r\n    };\r\n};\r\n\r\nconst logout = () => ( { type : types.logout } );\r\n\r\n//////\r\n\r\nexport \r\n{ \r\n    login, \r\n    starLoginEmailPassword, \r\n    startGoogleLogin, \r\n    starRegisterWhitEmailNamePassword,\r\n    startLogout,\r\n    logout \r\n};","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../Actions/notesAction';\r\n\r\n/////\r\n\r\nconst JournalEntry = ( { id, title, body, date, url } ) => \r\n{\r\n\r\n    const noteDate = moment( date );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /////////\r\n\r\n    const handleActiveNote = () =>\r\n    {\r\n        dispatch( activeNote( id, { title, body, date, url } ) );\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" onClick={ handleActiveNote }>\r\n            \r\n            { url && <div className=\"journal__entry-picture\" style={ { backgroundSize : \"cover\", backgroundImage : `url( ${ url } )` } }></div>  }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n\r\n                <span>{ noteDate.format( \"dddd\" ) }</span>\r\n                <h4>{ noteDate.format( \"Do\" ) }</h4>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default JournalEntry;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport JournalEntry from './JournalEntry';\r\n\r\n/////\r\n\r\nconst JournalEntries = () => \r\n{\r\n\r\n    const { note } = useSelector( state => state.notes );\r\n\r\n    ////\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"journal__entries\">\r\n\r\n            { note.map( ( element ) => <JournalEntry key={ element.id } { ...element } /> ) }\r\n            \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default JournalEntries;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../Actions/authAction';\r\nimport { starNewNote } from '../../Actions/notesAction';\r\nimport JournalEntries from './JournalEntries';\r\n\r\n/////\r\n\r\nconst SiderBar = () => \r\n{\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    //////\r\n\r\n    const handleLogout = () => dispatch( startLogout() );\r\n\r\n    ///////\r\n\r\n    const handleNewNote = () =>\r\n    {\r\n        dispatch( starNewNote() ); \r\n    };\r\n\r\n    //////\r\n\r\n    return (\r\n\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" style={ { color : \"white\" } }  ></i>\r\n                    <span style={ { color : \"white\" } } > { name }</span>\r\n\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={ handleLogout }>Logout</button>\r\n\r\n                \r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\">\r\n\r\n                <i className=\"far fa-calendar-plus fa-5x\" onClick={ handleNewNote }></i>\r\n                <p className=\"mt-5\" >New Entry</p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries/>\r\n\r\n        </aside>\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default SiderBar;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CNoteScreen from '../notes/CNoteScreen';\r\nimport NothingSelected from './NothingSelected';\r\nimport SiderBar from './SiderBar';\r\n\r\n///\r\n\r\nconst CJournalScreen = () => \r\n{ \r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n\r\n        <div className=\"journal__box-container\">\r\n\r\n            <SiderBar/>\r\n\r\n            <main>\r\n\r\n                { active ? <CNoteScreen /> : <NothingSelected/> }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CJournalScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useForm from '../../Hooks/useForm';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { starLoginEmailPassword, startGoogleLogin } from '../../Actions/authAction';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\n\r\n///\r\n\r\nconst CLoginScreen = () => \r\n{\r\n\r\n    const [ formValues, handleInputChange ] = useForm(  { email : \"joi@gmail.com\", password : \"123456\" } );\r\n\r\n    const { email, password } = formValues;\r\n\r\n    /////////\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError, loading } = useSelector( state => state.ui );\r\n\r\n    /////////\r\n\r\n    const handleLogin = ( event ) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        if( formValidator() )\r\n        {\r\n            dispatch( starLoginEmailPassword( email, password ) );\r\n        }\r\n       \r\n    }\r\n\r\n    const formValidator = () =>\r\n    {\r\n        if( !validator.isEmail( email ) )\r\n        {\r\n            Swal.fire( \"error\", \"email not valid\", \"error\" );\r\n            return false;\r\n        }\r\n        else if( password.length <= 5 )\r\n        {\r\n            Swal.fire( \"error\", \"invalid password\", \"error\" );\r\n            return false;\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    /////////\r\n\r\n    const handleGoogleLogin = () =>\r\n    {\r\n\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    /////////\r\n\r\n    return (\r\n\r\n        <>\r\n          <h3 className=\"auth__title\" >Login</h3>\r\n\r\n          <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n              { msgError && Swal.fire( \"error\", msgError, \"error\" )  }\r\n              <input className=\"auth__input\" type=\"text\" placeholder=\"Email\" name=\"email\" autoComplete=\"off\" value={ email } onChange={ handleInputChange }/>\r\n              <input className=\"auth__input\" type=\"password\" placeholder=\"Password\" name=\"password\" autoComplete=\"off\" value={ password } onChange={ handleInputChange }/>\r\n              <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={ loading ? true : false }>Login</button>\r\n\r\n              <div className=\"auth__social-network\">\r\n\r\n                  <p>Login with social network</p>\r\n\r\n                    <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n\r\n                        <p className=\"btn-text\">Sign in with google</p>\r\n\r\n                    </div>\r\n\r\n              </div>\r\n\r\n              <Link className=\"link\"  to=\"/auth/register\">Create new account</Link>\r\n\r\n          </form>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CLoginScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useForm from '../../Hooks/useForm';\r\nimport validator from \"validator\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setErrorAction, uiRemoveErrorAction } from '../../Actions/uiActions';\r\nimport { starRegisterWhitEmailNamePassword } from '../../Actions/authAction';\r\n\r\n///////\r\n\r\nconst CRegisterScreen = () => \r\n{\r\n\r\n     const [ formValues, handleInputChange ] = useForm( { email : \"joi@gmail.com\", name : \"Jose\", password : \"123456\", password2 : \"123456\" } );\r\n\r\n     const { email, name, password, password2  } = formValues;\r\n\r\n     //////////\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const { msgError } = useSelector(  state => state.ui );\r\n\r\n     /////////\r\n\r\n     const handleSubmit = ( event ) =>\r\n     {\r\n        event.preventDefault();\r\n\r\n        if( isFormValid() )\r\n        {\r\n            dispatch( starRegisterWhitEmailNamePassword( email, password, name ) ); \r\n        };\r\n\r\n     };\r\n\r\n     const isFormValid = () =>\r\n     {\r\n        if( name.trim().length === 0 )\r\n        { \r\n            dispatch( setErrorAction( \" name is not valid \" ) );\r\n            return false;\r\n        }\r\n        else if( !validator.isEmail( email ) )\r\n        {\r\n            dispatch( setErrorAction( \"email is not valid\" ) );\r\n            return false;\r\n        }\r\n        else if( password !== password2 || password.length <= 5 )\r\n        {\r\n            dispatch( setErrorAction( \"password is not valid\" ) );\r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            dispatch( uiRemoveErrorAction() );\r\n            return true;\r\n        };\r\n       \r\n     };\r\n\r\n     //////////\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"auth__title\" >Register</h3>\r\n\r\n            <form onSubmit={ handleSubmit } className=\"animate__animated animate__fadeIn animate__faster\">\r\n                \r\n                { msgError && <div className=\"auth__alert-error\"> { msgError } </div>}\r\n                <input className=\"auth__input\" type=\"text\" placeholder=\"Email\" name=\"email\" value={ email } onChange={ handleInputChange } autoComplete=\"off\"/>\r\n                <input className=\"auth__input\" type=\"text\" placeholder=\"Name\" name=\"name\" value={ name } onChange={ handleInputChange } autoComplete=\"off\"/>\r\n                <input className=\"auth__input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={ password } onChange={ handleInputChange } autoComplete=\"off\"/>\r\n                <input className=\"auth__input\" type=\"password\" placeholder=\"Confirm Password\" name=\"password2\" value={ password2 } onChange={ handleInputChange } autoComplete=\"off\"/>\r\n                <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">Register</button>\r\n\r\n                <Link className=\"link\"  to=\"/auth/login\">Already Register?</Link>\r\n\r\n            </form>\r\n      </>\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CRegisterScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter as Switch, Redirect, Route } from \"react-router-dom\";\r\nimport CLoginScreen from '../Components/auth/CLoginScreen';\r\nimport CRegisterScreen from '../Components/auth/CRegisterScreen';\r\n\r\n\r\n/////\r\n\r\nconst AuthRouter = () => \r\n{\r\n\r\n    return (\r\n\r\n        <div className=\"auth__main\">\r\n\r\n            <div className=\"auth__box-container\">\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/auth/login\" component={ CLoginScreen }/>\r\n\r\n                    <Route exact path=\"/auth/register\" component={ CRegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default AuthRouter;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PrivateRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/auth/login\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPrivateRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PublicRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( !isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPublicRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport CJournalScreen from '../Components/journal/CJournalScreen';\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport { firebase } from \"../FireBase/fireBaseConfig\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../Actions/authAction';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport { startLoadingNotes } from '../Actions/notesAction';\r\n\r\n/////\r\n\r\nconst AppRouter = () => \r\n{\r\n\r\n    const [ checking, setChecking ] = useState( true );\r\n\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\r\n\r\n    ///////\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //////\r\n\r\n    useEffect(() => \r\n    {\r\n        firebase.auth().onAuthStateChanged( async ( user ) => {\r\n\r\n            if( user?.uid )\r\n            {\r\n                dispatch(  login( user.uid, user.displayName ) );\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );  \r\n                \r\n                setIsLoggedIn( true );\r\n\r\n            }\r\n            else\r\n            {\r\n                setIsLoggedIn( false );\r\n            };\r\n\r\n            setChecking( false );\r\n\r\n        } );\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\r\n\r\n\r\n    ////////\r\n\r\n    if( checking )\r\n    {\r\n        return ( <center><h1>||..... Wait ....||</h1></center> )\r\n    };\r\n\r\n    ////////\r\n\r\n    return (\r\n\r\n\r\n        <Router>\r\n\r\n            <div>\r\n\r\n                <Switch>\r\n\r\n                    <PublicRoute isLoggedIn={ isLoggedIn } path=\"/auth\" component={ AuthRouter } />  \r\n\r\n                    <PrivateRoute isLoggedIn={ isLoggedIn } path=\"/\" component={ CJournalScreen }  />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default AppRouter;\r\n","import types from \"../Types/types\";\r\n\r\n/////\r\n\r\nconst authReducer = ( state = {}, action ) =>\r\n{\r\n    switch ( action.type ) \r\n    {\r\n        case types.login: return { uid: action.payload.uid, name : action.payload.displayName };\r\n\r\n        case types.logout: return {};\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\n////\r\n\r\nexport default authReducer;","import types from \"../Types/types\";\r\n\r\n//////\r\n\r\nconst initialState = { loading : false, msgError : null };\r\n\r\n/////\r\n\r\nconst uiReducer = ( state = initialState, action ) =>\r\n{\r\n\r\n    switch ( action.type ) \r\n    {\r\n        case types.uiSetError : return { ...state, msgError : action.payload } ;\r\n\r\n        case types.uiRemoveError : return { ...state, msgError : null };\r\n\r\n        case types.uiStartLoading: return { ...state, loading : action.payload };\r\n\r\n        case types.uiFinishLoading: return { ...state, loading : action.payload };\r\n\r\n        default: return state;\r\n    };\r\n    \r\n};\r\n\r\n/////\r\n\r\nexport default uiReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport authReducer from \"../Reducer/authReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport uiReducer from \"../Reducer/uiReducer\";\r\nimport { noteReducer } from \"../Reducer/noteReducer\";\r\n\r\n////\r\n\r\nconst reducers = combineReducers( { auth : authReducer, ui : uiReducer, notes : noteReducer } );\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n/////\r\n\r\nconst store = createStore( reducers, composeEnhancers( applyMiddleware( thunk ) ) );\r\n\r\n////\r\n\r\nexport default store;","import types from \"../Types/types\";\r\n\r\n//////\r\n\r\nconst noteReducer = ( state = { note : [], active : null }, action ) =>\r\n{\r\n    switch ( action.type ) \r\n    {   \r\n        case types.notesActive : return { ...state, active : { ...action.payload } }; \r\n\r\n        case types.notesAddNew : return { ...state, note : [ action.payload, ...state.note ] };\r\n        \r\n        case types.notesLoad : return { ...state, note :  [ ...action.payload ] };\r\n\r\n        case types.notesUpdated : return { ...state, note : state.note.map( \r\n            ( note )=> note.id === action.payload.id\r\n            \r\n            ? action.payload.note : note\r\n            \r\n            ) };\r\n\r\n\r\n        case types.notesDelete : return { ...state, active : null, note : state.note.filter( \r\n            \r\n            ( note ) => note.id !== action.payload ) };\r\n\r\n\r\n        case types.notesLogoutCleaning : return { ...state, active : null, note : [] };\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\n//////\r\n\r\nexport { noteReducer };","import React from 'react';\r\nimport AppRouter from '../Routers/AppRouter';\r\nimport { Provider } from \"react-redux\";\r\nimport store from '../Store/store';\r\n\r\n////\r\n\r\nconst JournalApp = () => \r\n{\r\n\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n\r\n            <AppRouter />\r\n\r\n       </Provider>\r\n        \r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default JournalApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport JournalApp from './App/JournalApp';\nimport \"./Styles/style.scss\";\n//``\n\n////\n\nconst divRoot = document.getElementById( \"root\" );\n\nReactDOM.render( <JournalApp/>, divRoot );"],"sourceRoot":""}